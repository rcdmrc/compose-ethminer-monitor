<source>
  @type  forward
  @id    input1
  port  24224
</source>

<source>
  @type prometheus
</source>

<filter docker.ethminer.**>
  @type grep
  <regexp>
   key log
   pattern /^\s*m\s+.*/
  </regexp>
</filter>

<filter docker.ethminer.**>
  @type parser
  key_name log
  reserve_data false
  emit_invalid_record_to_error false

  <parse>
    @type regexp
    expression /^\s*(?<msg_type>\w+)\s+(?<msg_time>[^ ]*)\s+(?<client_name>[^ ]*)\s+(?<job_time>[^ ]*)\s+(?<job_type>[^ ]*)\s+(?<hashrate_value>[^ ]*)\s+(?<hashrate_unit>[^ ]*) - (?<gpu_name>[^ ]*)\s+(?<gpu_what>[^ ]*)\s+(?<gpu_temp>[^ ]*)(?<gpu_temp_unit>[C|F])\s+(?<gpu_fan>[^ ]*)\%\s+(?<gpu_power>[^ ]*)(?<gpu_power_unit>[a-zA-Z]+)$/
    time_key msg_time
    time_format %H:%M:%S
    types gpu_what:float, gpu_fan:integer, gpu_power:float, gpu_temp:float, hashrate_value:float
  </parse>
</filter>

<filter docker.ethminer.**>
  @type prometheus
  <metric>
      name hashrate
      type gauge
      desc Most recent hashrate.
      key hashrate_value
  </metric>
  <metric>
      name gpu_power_usage
      type gauge
      desc GPU power usage.
      key gpu_power
  </metric>
  <metric>
      name gpu_fan_speed
      type gauge
      desc GPU fan speed.
      key gpu_fan
  </metric>
  <metric>
      name gpu_temp
      type gauge
      desc GPU temperature.
      key gpu_temp
  </metric>  
</filter>

<filter **>
  @type stdout
</filter>